name: Go

on:
  push:
  pull_request:

jobs:
  
  Go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.18', '1.19' ]
    steps:
      - uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Gofmt
        run: if [[ $(gofmt -l . | head -c1 | wc -c) -ne 0 ]]; then false; fi

      - name: Get
        run: go get -v ./...
        
      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -json ./... > TestResults-${{ matrix.go-version }}.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-tests-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json
        
      - name: Install cover
        run: go install golang.org/x/tools/cmd/cover@latest

      - name: Run cover
        run: go test -coverprofile=c.out
        
      - name: Diplay cover
        run: go tool cover -func=c.out

      - name: Generate html cover
        run: go tool cover -html=c.out -o Coverage-${{ matrix.go-version }}.html

      - name: Upload Go cover results
        uses: actions/upload-artifact@v3
        with:
          name: Go-cover-${{ matrix.go-version }}
          path: Coverage-${{ matrix.go-version }}.html
